<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
    例如namespace="com.nt.mybatis.mapping.userMapper"就是com.nt.mybatis.mapping(包名)+userMapper(userMapper.xml文件去除后缀) -->
<mapper namespace="com.fcant.mybatis.ch01.mapper.UserMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复.使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
        resultType="com.nt.mybatis.entity.User"就表示将查询结果封装成一个User类的对象返回 User类就是users表所对应的实体类 -->
    <!-- 根据id查询得到一个user对象 -->
    <select id="getUser" parameterType="int" resultType="com.fcant.mybatis.ch01.bean.User">
        select * from m_users where id=#{id}
    </select>

    <!-- 根据id查询得到一个user对象 -->
    <select id="getById" parameterType="int"
            resultType="com.fcant.mybatis.ch01.bean.User">
        select * from m_users where id=#{id}
    </select>

    <!-- 创建用户(Create) -->
    <insert id="add" parameterType="com.fcant.mybatis.ch01.bean.User">
        insert into m_users(name,age)
        values(#{name},#{age})
    </insert>

    <!-- 删除用户(Remove) -->
    <delete id="deleteById" parameterType="int">
        delete from m_users where
        id=#{id}
    </delete>

    <!-- 修改用户(Update) -->
    <update id="update" parameterType="com.fcant.mybatis.ch01.bean.User">
        update m_users set
        name=#{name},age=#{age} where id=#{id}
    </update>

    <!-- 查询全部用户 -->
    <select id="getAll" resultType="com.fcant.mybatis.ch01.bean.User">
        select * from m_users
    </select>
</mapper>